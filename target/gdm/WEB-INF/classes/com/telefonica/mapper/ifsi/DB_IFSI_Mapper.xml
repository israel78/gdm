<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<!-- IMPORTANTE, tener sobre todo cuidado con estos dos caracteres "<" y "&" en las SQLs. 
    Encerrarlos con CDATA o ponerlos con su secuencia de escape.
    URL: http://xmmssc-www.star.le.ac.uk/SAS/xmmsas_20070308_1802/doc/param/node24.html
         http://www.w3schools.com/xml/xml_cdata.asp.
         
         http://stackoverflow.com/questions/1091945/what-characters-do-i-need-to-escape-in-xml-documents
         http://www.liquid-technologies.com/XML/EscapingData.aspx
    URL que nos da ya "escapado" un texto para XML: http://www.freeformatter.com/xml-escape.html

	CDATA - (Unparsed) Character Data
	
	The term CDATA is used about text data that should not be parsed by the XML parser.
	Characters like "<" and "&" are illegal in XML elements.
	"<" will generate an error because the parser interprets it as the start of a new element.
	"&" will generate an error because the parser interprets it as the start of an character entity.
	Some text, like JavaScript code, contains a lot of "<" or "&" characters. To avoid errors script code can be defined as CDATA.
	Everything inside a CDATA section is ignored by the parser.
	A CDATA section starts with "<![CDATA[" and ends with "]]>".
	
	Estos son los 5 carácteres (sobre todo con "<" y "&" en las SQLs) con los que tenemos que tener cuidado:
	carácter	secuencia_escape (o	encerrarlos con CDATA)
	"   &quot	&quot
	'   &apos   &apos
	<   &lt		&lt
	>   &gt		&gt
	&   &amp	&amp
-->
<!-- OGNL Syntax: http://commons.apache.org/proper/commons-ognl/language-guide.html 
     .
     http://www.adictosaltrabajo.com/tutoriales/tutoriales.php?pagina=TecnicasBasicasConMybatis
     http://www.loiane.com/2011/03/ibatis-mybatis-trabalhando-com-queries-dinamicas-sql/
     . 
     * NOTA, con OGNL (para los <if>, <choose>, ... ) no podemos poner CDATA al principio 
       de la SQL, ya que no procesará el script OGNL.
       Everything inside a CDATA section is ignored by the parser !!!!!!!!!!!! 
       IMPORTANTE !!!!!!!!!!!!!!!!!!! 
-->


<!-- MAPPER para la BD "jdbc:sqlserver://mrdaux;databaseName=IFSI" (producción, certificación, desarrollo) -->  
<mapper namespace="com.telefonica.mapper.ifsi.DB_IFSI_Mapper">

<!-- ................................................................................ -->
<!-- SELECT/INSERT/UPDATE/DELETE genéricos .......................................... -->
<!-- ................................................................................ -->
<!-- selectBySQL. URL: http://www.databaseskill.com/4716501/
                       https://mybatis.github.io/mybatis-3/es/sqlmap-xml.html (buscar "${").
     ${...}: Sustitución de Strings.
		     Por defecto, usar la sintaxis #{} hace que MyBatis genere propiedades de PreparedStatement 
		     y que asigne los valores a parámetros de PreparedStatement de forma segura (ej. ?). 
		     Aunque esto es más seguro, más rápido y casi siempre la opción adecuada, 
		     en algunos casos sólo quieres inyectar un trozo de texto sin modificaciones 
		     dentro de la sentencia SQL. Por ejemplo, para el caso de ORDER BY, podrías utilizar algo así:
		     ORDER BY ${columnName}
		     En este caso MyBatis no alterará el contenido del texto.                   
-->
<!-- selectBySQL(@Param("sql") String sSQL);  -->
<select id="selectBySQL" parameterType="Map" resultType="java.util.HashMap" >
	<![CDATA[
	${sql};
	]]>
</select>
<!-- public int insertBySQL(@Param("sql") String sSQL); -->
<insert id="insertBySQL" parameterType="Map" >
	<![CDATA[
	${sql};
	]]>
</insert>
<!-- public int updateBySQL(@Param("sql") String sSQL); -->
<update id="updateBySQL" parameterType="Map" >
	<![CDATA[
	${sql};
	]]>
</update>
<!-- public int deleteBySQL(@Param("sql") String sSQL); -->
<delete id="deleteBySQL" parameterType="Map" >
	<![CDATA[
	${sql};
	]]>
</delete>
<!-- ................................................................................ -->
<!-- ................................................................................ -->

<!-- public Date selectNow(); --> <!-- Obtenemos la fecha/hora del servidor de BD -->
<select id="selectNow" resultType="java.util.Date" >
	<![CDATA[
	-- leemos sin esperar a que se desbloquee la(s) tabla(s). SELECTs más rápidos.
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
	SET DATEFORMAT ymd;

	-- MySQL. Fecha/Hora actual.
	-- SELECT NOW();
	--
	-- Microsoft SQL Server. Fecha/Hora actual.
	SELECT GETDATE();
	]]>
</select>




<!-- ************************************************************************************************** -->
<!-- ************************************************************************************************** -->
<!-- ************************************************************************************************** -->
<!-- MyBatis: Working with Stored Procedures. Llamar a "procedimientos almacenados". 
     URL: http://java.dzone.com/articles/ibatis-mybatis-working-stored 
      	  http://stackoverflow.com/questions/9215784/java-mybatis-stored-procedure-call-with-out-parameters
      	  http://stackoverflow.com/questions/15666856/calling-oracle-stored-procedures-with-mybatis
      	  http://www.tutorialspoint.com/ibatis/ibatis_stored_procedures.htm
     MyBatis JdbcTypes.
     URL: https://db.apache.org/ojb/docu/guides/jdbc-types.html
     	  https://mybatis.github.io/mybatis-3/apidocs/reference/org/apache/ibatis/type/JdbcType.html
     Como devolver datos desde un stored procedure. Todas las posibilidades:
     URL: http://www.sommarskog.se/share_data.html
          http://stackoverflow.com/questions/1492411/sql-server-select-from-stored-procedure
 -->
<!-- public Consulta_DatosProxy select_call_Consulta_DatosProxy(); -->
<select id="select_call_Consulta_DatosProxy" resultType="com.telefonica.entity.Consulta_DatosProxy" statementType="CALLABLE">
	{CALL IFSI.web_icorreo.Consulta_DatosProxy(
	)};	
</select> <!-- <select id="select_call_Consulta_DatosProxy" resultType="com.dycec.bd.modelo.Consulta_DatosProxy" statementType="CALLABLE"> -->


</mapper> <!-- <mapper namespace="com.dycec.bd.modelo.mapper.DB_IFSI_Mapper"> -->